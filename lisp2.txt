(defun insere (l d c) ;INSERE UM CURSO EM UMA DISCIPLINA
	(if (eql (caar l) d)
		(if (null(cdr (cdadar l))) ; curso vazio
			(cons (cons d (cons (cons (cons (caadar l) nil)
									(cons (cons (car (cdadar l)) nil) c)) 
			nil)) (cdr l)) ; nao existe 
			(cons (car l) (cdr l)) ;ja existe um curso para essa disciplina	
		)
		(if(null(car l))
			(cons (cons d (cons (cons (cons nil nil) 
								 (cons (cons nil nil) c)) 
			nil)) nil) ; disciplina nao existe
			(cons (car l) (insere (cdr l) d c)) ; se ainda existirem disciplinas pego proxima
		)
	)
)

(DEFUN VINCULAR-DISC-CURSO (DISCIPLINA CURSO BD) ;INSERE UM CURSO EM VARIAS DISCIPLINAS
	(IF(NULL (CAR DISCIPLINA))
		(CONS (car BD) (cdr BD))
		(VINCULAR-DISC-CURSO (CDR DISCIPLINA) CURSO 
			(INSERE BD (CAR DISCIPLINA) CURSO )) 
	)
)

(defun existe (l a)
	(if(null(car l))
		nil
		(if(eql (car l ) a)
			t
			(existe (cdr l) a)
		)
	)
)

(defun insereM (l d a)
	(if (eql (caar l) d)
		(if (null(caadar l)) 
			(cons (cons d (cons (cons (cons a nil)
									(cons (cons (caar (cdadar l)) (cdar (cdadar l))) 
									(cdr (cdadar l)))) 
			nil)) (cdr l)) ; nao existe nenhum aluno
			(if (existe (caadar  l) a)
				(cons (car l) (cdr l)) ; ja existe aluno
				(cons (cons d (cons (cons (cons a (cons (car (caadar l)) (cdr (caadar l)) ))
									(cons (cons (caar (cdadar l)) (cdar (cdadar l))) 
									(cdr (cdadar l)))) 
				nil)) (cdr l)) ; existem outros alunos, mas nao existe o que eu vou inserir
			)
		)
		(if(null(car l))
			(cons (cons d (cons (cons (cons a nil) 
								 (cons (cons nil nil) nil)) 
			nil)) nil) ; disciplina nao existe
			(cons (car l) (insereM (cdr l) d a)) ; se ainda existirem disciplinas pego proxima
		)
	)
)



(DEFUN VINCULAR-DISC-ALUNO (DISCIPLINAS ALUNO BD) 
	(IF(NULL (CAR DISCIPLINAS))
		(CONS (car BD) (cdr BD))
		(VINCULAR-DISC-ALUNO (CDR DISCIPLINAS) ALUNO 
			(INSEREM BD (CAR DISCIPLINAS) ALUNO )) 
	)
)

(DEFUN MATRICULAR (ALUNOS DISCIPLINAS BD)
	(IF(NULL (CAR ALUNOS))
		(CONS (car BD) (cdr BD))
		(MATRICULAR (CDR ALUNOS) DISCIPLINAS
			(VINCULAR-DISC-ALUNO DISCIPLINAS (CAR ALUNOS)  BD)) 
	)

)


(defun insereP (l d p)
	(if (eql (caar l) d)
		(if (null(caadar l)) 
			(cons (cons d (cons (cons (cons (car (caadar l)) (cdr (caadar l)))
									(cons (cons p nil) ;(inserep '((1 ((2) () . 4))) 1 3) > ((1 ((2) (3 nil) . 4)))
									(cdr (cdadar l)))) 
			nil)) (cdr l)) ; nao existe nenhum professor
			(if (existe (car (cdadar  l)) p)
				(cons (car l) (cdr l)) ; ja existe professor
				(cons (cons d (cons (cons (cons (car (caadar l)) (cdr (caadar l)))
									(cons (cons p (cons (caar (cdadar l)) (cdar (cdadar l)))) 
									(cdr (cdadar l)))) 
				nil)) (cdr l)) ; existem outros professor, mas nao existe o que eu vou inserir
			)
		)
		(if(null(car l))
			(cons (cons d (cons (cons (cons nil nil) 
								 (cons (cons p nil) nil)) 
			nil)) nil) ; disciplina nao existe
			(cons (car l) (insereP (cdr l) d p)) ; se ainda existirem disciplinas pego proxima
		)
	)
)


(DEFUN VINCULAR-DISC-PROF (DISCIPLINAS PROF BD) 
	(IF(NULL (CAR DISCIPLINAS))
		(CONS (car BD) (cdr BD))
		(VINCULAR-DISC-PROF (CDR DISCIPLINAS) PROF 
			(INSEREP BD (CAR DISCIPLINAS) PROF )) 
	)
)

(DEFUN VINCULAR (PROFESSORES DISCIPLINAS BD)
	(IF(NULL (CAR PROFESSORES))
		(CONS (car BD) (cdr BD))
		(VINCULAR (CDR PROFESSORES) DISCIPLINAS
			(VINCULAR-DISC-PROF DISCIPLINAS (CAR PROFESSORES)  BD)) 
	)

)







(insere '((2 ((2) (3) )) (1 ((2) (3) ))) 1 4)
(cons (cons 1 (cons (cons (cons 2 nil)(cons (cons 3 nil) 4)) nil)) nil)

(cons (cons 1 (cons (cons (cons 2 nil)
						  (cons (cons 3 (cons 5 nil)) 4)) 
			nil)) nil)

(cdr (cdadar '((1((2) (3) . 4))))) > 4 	CURSO
(cadar '((1((2) (3) . 4)))) > (((2) (3).4)) TUDO
(cdadar '((1((2) (3) . 4)))) > ((3).4) 
(caadar '((1((2) (3) . 4)))) > (2) ALUNO
(car (caadar '((1((2 6 7) (3) . 4))))) > 2
(cdr (caadar '((1((2 6 7) (3) . 4))))) > (6 7)
(car (cdadar '((1((2) (3) . 4))))) > (3) PROFESSORES
(caar (cdadar '((1((2) (3) . 4))))) > 3
(cdar (cdadar '((1((2) (3 5) . 4))))) > (5)
(caar '((1((2) (3) . 4)))) > 1 DISCIPLINAS