(defun insere (l d c) ;INSERE UM CURSO EM UMA DISCIPLINA
	(if (eql (caar l) d)
		(if (null(cdr (cdadar l))) ; curso vazio
			(cons (cons d (cons (cons (cons (caadar l) nil)
									(cons (cons (car (cdadar l)) nil) c)) 
			nil)) (cdr l)) ; nao existe 
			(cons (car l) (cdr l)) ;ja existe um curso para essa disciplina	
		)
		(if(null(car l))
			(cons (cons d (cons (cons (cons nil nil) 
								 (cons (cons nil nil) c)) 
			nil)) nil) ; disciplina nao existe
			(cons (car l) (insere (cdr l) d c)) ; se ainda existirem disciplinas pego proxima
		)
	)
)

(DEFUN VINCULAR-DISC-CURSO (DISCIPLINA CURSO BD) ;INSERE UM CURSO EM VARIAS DISCIPLINAS
	(IF(NULL (CAR DISCIPLINA))
		(CONS (car BD) (cdr BD))
		(VINCULAR-DISC-CURSO (CDR DISCIPLINA) CURSO 
			(INSERE BD (CAR DISCIPLINA) CURSO )) 
	)
)

(defun existe (l a)
	(if(null(car l))
		nil
		(if(eql (car l ) a)
			t
			(existe (cdr l) a)
		)
	)
)

(defun insereM (l d a)
	(if (eql (caar l) d)
		(if (null(caadar l)) 
			(cons (cons d (cons (cons (cons a nil)
									(cons (cons (caar (cdadar l)) (cdar (cdadar l))) 
									(cdr (cdadar l)))) 
			nil)) (cdr l)) ; nao existe nenhum aluno
			(if (existe (caadar  l) a)
				(cons (car l) (cdr l)) ; ja existe aluno
				(cons (cons d (cons (cons (cons a (cons (car (caadar l)) (cdr (caadar l)) ))
									(cons (cons (caar (cdadar l)) (cdar (cdadar l))) 
									(cdr (cdadar l)))) 
				nil)) (cdr l)) ; existem outros alunos, mas nao existe o que eu vou inserir
			)
		)
		(if(null(car l))
			(cons (cons d (cons (cons (cons a nil) 
								 (cons (cons nil nil) nil)) 
			nil)) nil) ; disciplina nao existe
			(cons (car l) (insereM (cdr l) d a)) ; se ainda existirem disciplinas pego proxima
		)
	)
)



(DEFUN VINCULAR-DISC-ALUNO (DISCIPLINAS ALUNO BD) 
	(IF(NULL (CAR DISCIPLINAS))
		(CONS (car BD) (cdr BD))
		(VINCULAR-DISC-ALUNO (CDR DISCIPLINAS) ALUNO 
			(INSEREM BD (CAR DISCIPLINAS) ALUNO )) 
	)
)

(DEFUN MATRICULAR (ALUNOS DISCIPLINAS BD)
	(IF(NULL (CAR ALUNOS))
		(CONS (car BD) (cdr BD))
		(MATRICULAR (CDR ALUNOS) DISCIPLINAS
			(VINCULAR-DISC-ALUNO DISCIPLINAS (CAR ALUNOS)  BD)) 
	)

)


(defun insereP (l d p)
	(if (eql (caar l) d)
		(if (null(caadar l)) 
			(cons (cons d (cons (cons (cons (car (caadar l)) (cdr (caadar l)))
									(cons (cons p nil) 
									(cdr (cdadar l)))) 
			nil)) (cdr l)) ; nao existe nenhum professor
			(if (existe (car (cdadar  l)) p)
				(cons (car l) (cdr l)) ; ja existe professor
				(cons (cons d (cons (cons (cons (car (caadar l)) (cdr (caadar l)))
									(cons (cons p (cons (caar (cdadar l)) (cdar (cdadar l)))) 
									(cdr (cdadar l)))) 
				nil)) (cdr l)) ; existem outros professor, mas nao existe o que eu vou inserir
			)
		)
		(if(null(car l))
			(cons (cons d (cons (cons (cons nil nil) 
								 (cons (cons p nil) nil)) 
			nil)) nil) ; disciplina nao existe
			(cons (car l) (insereP (cdr l) d p)) ; se ainda existirem disciplinas pego proxima
		)
	)
)

(DEFUN VINCULAR-DISC-PROF (DISCIPLINAS PROF BD) 
	(IF(NULL (CAR DISCIPLINAS))
		(CONS (car BD) (cdr BD))
		(VINCULAR-DISC-PROF (CDR DISCIPLINAS) PROF 
			(INSEREP BD (CAR DISCIPLINAS) PROF )) 
	)
)

(DEFUN VINCULAR (PROFESSORES DISCIPLINAS BD)
	(IF(NULL (CAR PROFESSORES))
		(CONS (car BD) (cdr BD))
		(VINCULAR (CDR PROFESSORES) DISCIPLINAS
			(VINCULAR-DISC-PROF DISCIPLINAS (CAR PROFESSORES)  BD)) 
	)

)

(DEFUN EXCLUIR (L E) 
	(IF(NULL (CAR L))
		NIL
		(IF(EQL (CAR L) E)
			(CDR L) 
			(CONS (CAR L) (EXCLUIR (CDR L) E))
		)
	)
)

(DEFUN EXCLUIRM (L D A)
	(if (eql (caar l) d)
		(if (null(caadar l)) 
			(cons (car l) (cdr l)) ; nao existe nenhum aluno
			(if (existe (caadar  l) a)
				(cons (cons d (cons (cons (EXCLUIR (caadar L) A)
									(cons (cons (caar (cdadar l)) (cdar (cdadar l))) 
									(cdr (cdadar l)))) 
				nil)) (cdr l)) 
				(cons (car l) (cdr l)); existem outros alunos, mas nao existe o que eu vou EXCLUIR 
			)
		)
		(if(null(car l))
			(cons (car l) (cdr l)) ; disciplina nao existe
			(cons (car l) (EXCLUIRM (cdr l) d a)) ; se ainda existirem disciplinas pego proxima
		)
	)
)


(DEFUN EXCLUIR-DISC-ALUNO (DISCIPLINAS ALUNO BD) 
	(IF(NULL (CAR DISCIPLINAS))
		(CONS (car BD) (cdr BD))
		(EXCLUIR-DISC-ALUNO (CDR DISCIPLINAS) ALUNO 
			(EXCLUIRM BD (CAR DISCIPLINAS) ALUNO )) 
	)
)

(DEFUN CANCELAR-MATRICULA (ALUNOS DISCIPLINAS BD)
	(IF(NULL (CAR ALUNOS))
		(CONS (car BD) (cdr BD))
		(CANCELAR-MATRICULA  (CDR ALUNOS) DISCIPLINAS
			(EXCLUIR-DISC-ALUNO DISCIPLINAS (CAR ALUNOS)  BD)) 
	)

)


(DEFUN EXCLUIRP (L D P)
	(if (eql (caar l) d)
		(if (null(car (cdadar  l))) 
			(cons (car l) (cdr l)) ; nao existe nenhum PROFESSORE
			(if (existe (car (cdadar l)) P)
			(cons (cons d (cons (cons (cons (car (caadar l)) (cdr (caadar l)))
									(cons (excluir (car (cdadar l)) p) 
									(cdr (cdadar l)))) 
			nil)) (cdr l))
			(cons (car l) (cdr l)); existem outros alunos, mas nao existe o que eu vou EXCLUIR 
			)
		)
		(if(null(car l))
			(cons (car l) (cdr l)) ; disciplina nao existe
			(cons (car l) (EXCLUIRP (cdr l) d P)) ; se ainda existirem disciplinas pego proxima
		)
	)
)

;TESTES
;QUANDO SÓ EXISTE O ALUNO QUE SERÁ EXCLUIDO
(EXCLUIRM '((1 ((2) (3) . 4))) 1 2)  > ((1 (NIL (3) . 4))) ESTA OK

;QUANDO NÃO TEM NADA CADASTRADO
(EXCLUIRP '() 1 3)
;QUANDO NÃO TEM NENHUM PROFESSOR CADASTRADO
(EXCLUIRP '((1 ((2) () . 4))) 1 3)
;QUANDO SÓ TEM O ELEMENTO QUE SERA EXCLUIDO
(EXCLUIRP '((1 ((2) (3) . 4))) 1 3)
(EXCLUIRP '((1 ((2) (3 5) . 4))) 1 3)
(EXCLUIRP '((0 ((2) (3) . 4))) 1 3)
(EXCLUIRP '((0 ((2) (3) . 4)) (1 ((2) (3) . 4))) 1 3)

(DEFUN EXCLUIR-DISC-PROF (DISCIPLINAS PROF BD) 
	(IF(NULL (CAR DISCIPLINAS))
		(CONS (car BD) (cdr BD))
		(EXCLUIR-DISC-PROF (CDR DISCIPLINAS) PROF 
			(EXCLUIRP BD (CAR DISCIPLINAS) PROF )) 
	)
)
;QUANDO SÓ EXISTE O ALUNO QUE SERÁ EXCLUIDO
(EXCLUIR-DISC-PROF '() 3 `())
(EXCLUIR-DISC-PROF '() 3 '((1 ((2) (3) . 4))))
(EXCLUIR-DISC-PROF '(1) 3 '((1 ((2) (3) . 4))))

(DEFUN REMOVER-VINCULO (PROFESSORES DISCIPLINAS BD)
	(IF(NULL (CAR PROFESSORES))
		(CONS (car BD) (cdr BD))
		(REMOVER-VINCULO (CDR PROFESSORES) DISCIPLINAS
			(EXCLUIR-DISC-PROF DISCIPLINAS (CAR PROFESSORES)  BD)) 
	)
)

;TESTE
(REMOVER-VINCULO `(3 4) `(1 2) `((1 ((2) (3) . 4)) (2 (() (3 4) . 4)))) ;OK


(DEFUN DISC-CURSO? (DISCIPLINA BD) 
	(IF (NULL(CAAR BD))
		NIL
		(IF (EQL (CAAR BD) DISCIPLINA )
			(cdr (cdadar BD))
			(DISC-CURSO? DISCIPLINA (CDR BD))
		)
	)
)
;TESTES
(DISC-CURSO? 1 '())
(DISC-CURSO? 1 '((1((2) (3)))))
(DISC-CURSO? 1 '((1((2) (3) . 4))))
(DISC-CURSO? 1 '((0((2) (3) . 4))))
(DISC-CURSO? 1 '((0((2) (3) . 5)))(1((2) (3) . 4))))


(DEFUN MATRICULADOS? (DISCIPLINA BD)
	(IF (NULL(CAAR BD))
		NIL
		(IF (EQL (CAAR BD) DISCIPLINA )
			(caadar BD)
			(MATRICULADOS? DISCIPLINA (CDR BD))
		)
	)
)
;TESTE
(MATRICULADOS? 1 '((2 ((2) (3) )) (1 ((2 0) (3 8 9) . 4))))


(DEFUN VINCULADOS? (DISCIPLINA BD) 
	(IF (NULL(CAAR BD))
		NIL
		(IF (EQL (CAAR BD) DISCIPLINA )
			(car (cdadar  BD))
			(VINCULADOS? DISCIPLINA (CDR BD))
		)
	)
)

;TESTES
(VINCULADOS? 1 '())
(VINCULADOS? 1 '((1 ((2) (3) . 4))) )

(DEFUN CURSA? (ALUNO BD) 
	(IF(NULL(caadar BD))
		NIL
		(IF(EXISTE (caadar BD) ALUNO)
			(CONS (caar BD) (CURSA? ALUNO (CDR BD)))
			(CURSA? ALUNO (CDR BD))
		)
	)
)

(CURSA? 2 '((1((2) (3) . 4)) (0((5 2 6) (3) . 4))))

(DEFUN MINISTRA? (PROFESSOR BD) 
	(IF(NULL(car (cdadar BD)))
		NIL
		(IF(EXISTE (car (cdadar BD)) PROFESSOR)
			(CONS (caar BD) (MINISTRA? PROFESSOR (CDR BD)))
			(MINISTRA? PROFESSOR (CDR BD))
		)
	)
)



;;;;;;;;;;;;
(insere '((2 ((2) (3) )) (1 ((2) (3) ))) 1 4)
(cons (cons 1 (cons (cons (cons 2 nil)(cons (cons 3 nil) 4)) nil)) nil)

(cons (cons 1 (cons (cons (cons 2 nil)
						  (cons (cons 3 (cons 5 nil)) 4)) 
			nil)) nil)

(cdr (cdadar '((1((2) (3) . 4))))) > 4 	CURSO
(cadar '((1((2) (3) . 4)))) > (((2) (3).4)) TUDO
(cdadar '((1((2) (3) . 4)))) > ((3).4) 
(caadar '((1((2) (3) . 4)))) > (2) ALUNO
(car (caadar '((1((2 6 7) (3) . 4))))) > 2
(cdr (caadar '((1((2 6 7) (3) . 4))))) > (6 7)
(car (cdadar '((1((2) (3) . 4))))) > (3) PROFESSORES
(caar (cdadar '((1((2) (3) . 4))))) > 3
(cdar (cdadar '((1((2) (3 5) . 4))))) > (5)
(caar '((1((2) (3) . 4)))) > 1 DISCIPLINA












